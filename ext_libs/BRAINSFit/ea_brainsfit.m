function ea_brainsfit(fixedVolume, movingVolume, outputVolume)
% Wrapper for BRAINSFit

if fileparts(movingVolume)
    volumedir = [fileparts(movingVolume), filesep];
else
    volumedir =['.', filesep];
end

ttries=ea_detct2anatattempts(volumedir); % how many coregistration attempts have been made in the past..

fixedVolume = ea_path_helper(fixedVolume);
movingVolume = ea_path_helper(movingVolume);
outputVolume = ea_path_helper(outputVolume);

% first attempt..
fixparams{1} = [' --useRigid --useAffine' ...
    ' --samplingPercentage 0.005' ...
    ' --removeIntensityOutliers 0.005' ...
    ' --interpolationMode Linear' ...
    ' --outputTransform ', ea_path_helper([volumedir, 'ct2anat',num2str(ttries+1),'.txt']), ...
    ' --initializeTransformMode useGeometryAlign'...
    ' --maskProcessingMode ROIAUTO' ...
    ' --ROIAutoDilateSize 3'];

% second attempt..
fixparams{2} = [' --useRigid --useAffine' ...
    ' --samplingPercentage 0.005' ...
    ' --removeIntensityOutliers 0.005' ...
    ' --interpolationMode Linear' ...
    ' --outputTransform ', ea_path_helper([volumedir, 'ct2anat',num2str(ttries+1),'.txt']), ...
    ' --initializeTransformMode Off' ...
    ' --initialTransform ', ea_path_helper([volumedir, 'ct2anat',num2str(ttries),'.txt']), ...
    ' --maskProcessingMode ROIAUTO' ...
    ' --ROIAutoDilateSize 3'];

% third attempt..
fixparams{3} = [' --useRigid --useAffine' ...
    ' --samplingPercentage 0.005' ...
    ' --removeIntensityOutliers 0.005' ...
    ' --interpolationMode Linear' ...
    ' --outputTransform ', ea_path_helper([volumedir, 'ct2anat',num2str(ttries+1),'.txt']), ...
    ' --initializeTransformMode Off' ...
    ' --initialTransform ', ea_path_helper([volumedir, 'ct2anat',num2str(ttries),'.txt'])];

if ttries>3
    ttries=3;
end

basename = [fileparts(mfilename('fullpath')), filesep, 'BRAINSFit'];

if ispc
    BRAINSFit = [basename, '.exe '];
elseif isunix
    BRAINSFit = [basename, '.', computer, ' '];
end

ea_libs_helper
cmd = [BRAINSFit, fixparams{ttries}, ...
        ' --fixedVolume ' , fixedVolume, ...
        ' --movingVolume ', movingVolume, ...
        ' --outputVolume ', outputVolume];
if ~ispc
    system(['bash -c "', cmd, '"']);
else
    system(cmd);
end
